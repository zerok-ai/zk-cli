name: deploy
on:
  push:
    tags: #r/<ENVIRONMENT>/<DOCKER-TAG-OR-VERSION>
<<<<<<< HEAD
      - 'r/**'
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: 'latest'
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'pxclient02'
=======
      - 'dev/**'
  workflow_dispatch:
    inputs:
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'devclient03'
>>>>>>> develop
      ZK_CLOUD_ADDRESS:
        description: 'Url of ZK_CLOUD cluster'
        required: true
        default: 'devcloud01.getanton.com'
      ZK_API_KEY:
        description: 'API KEY - you can get it from px dashboard'
        required: true
        default: 'px-api-e0593597-de51-44cd-bc72-6cbdb881b2be'
<<<<<<< HEAD
  workflow_call:
    inputs:
      VERSION:
        type: string
        default: 'latest'
      ENVIRONMENT:
        type: string
        default: 'poc'
    secrets:
      GKE_SA_KEY:
        required: true
env:
  DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}
  GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
  ZK_CLOUD_ADDRESS: ${{ github.event.inputs.ZK_CLOUD_ADDRESS }}
  ZK_API_KEY: ${{ github.event.inputs.ZK_API_KEY }}
  GOOS: ${{ vars.GOOS }}
  GOARCH: ${{ vars.GOARCH }}
  CGO_ENABLED: ${{ vars.CGO_ENABLED }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  NS: ${{ vars.NS }}
  DOCKER_REPO: ${{ vars.DOCKER_REPO }}
  APP_NAME: ${{ vars.APP_NAME }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  GOPRIVATE: ${{ vars.GOPRIVATE }}
  TOKEN: ${{ secrets.GITPAT }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}

jobs:
  init:
    runs-on: zk-self-hosted
    outputs:
      ENVIRONMENT: ${{ steps.extractEnvironment.outputs.EXTRACTED_ENVIRONMENT }}
      CLUSTERNAME: ${{ steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME }}
      VERSION: ${{ steps.extractClusterAndVersion.outputs.TAG_VERSION }}
    steps:
      - name: Set tag envt var
        run: |
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"

      - name: Extract cluster and version
        id: extractClusterAndVersion
        run: |
          if [ "$DOCKER_TAG" == "" ]; then
            part1=$(echo "$GIT_TAG" | cut -d'/' -f2)
            part2=$(echo "$GIT_TAG" | cut -d'/' -f3)
            echo "TAG_CLUSTERNAME=$part1" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$part2" >> $GITHUB_OUTPUT
            clusterName=$part1
          else
            echo "TAG_CLUSTERNAME=$GKE_CLUSTER" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$DOCKER_TAG" >> $GITHUB_OUTPUT
            clusterName=$GKE_CLUSTER
          fi
          TAG_CLUSTERNAME_CAPITAL=$(echo "$clusterName" | tr '[:lower:]' '[:upper:]')
          echo "TAG_CLUSTERNAME_CAPITAL=$TAG_CLUSTERNAME_CAPITAL" >> $GITHUB_OUTPUT

      - name: Extract environment
        id: extractEnvironment
        env:
          ORG_VARIABLE_NAME: ${{ format('{0}_ENV', steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME_CAPITAL) }}
          ORG_VARIABLE: ${{ vars[format('{0}_ENV', steps.extractClusterAndVersion.outputs.TAG_CLUSTERNAME_CAPITAL)] }}
        run: |
          echo "EXTRACTED_ENVIRONMENT=$ORG_VARIABLE" >> $GITHUB_OUTPUT
          echo "$ORG_VARIABLE_NAME"
          echo "$ORG_VARIABLE"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
=======
      ACTION:
        type: choice
        required: true
        description: 'Choose action to perform'
        options:
          - install
          - uninstall
          - dev-install
      VERSIONS:
        description: 'All versions'
        required: true
        default: 'zk-scenario-manager=0.1.0-alpha,zk-axon=0.1.0-alpha,zk-daemonset=0.1.0-alpha,zk-gpt=0.1.0-alpha,zk-wsp-client=0.1.0-alpha,zk-operator=0.1.0-alpha,zk-app-init-containers=0.1.0-alpha'
env:
  GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
  ZK_CLOUD_ADDRESS: ${{ github.event.inputs.ZK_CLOUD_ADDRESS }}
  ZK_API_KEY: ${{ github.event.inputs.ZK_API_KEY }}
  ACTION: ${{ github.event.inputs.ACTION }}
  VERSIONS: ${{ github.event.inputs.VERSIONS }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}

jobs:
  init:
    uses: zerok-ai/zk-git-actions/.github/workflows/zk-dev-init.yml@main
    with:
      GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
      GIT_TAG: ${{ github.ref }}
      DOCKER_TAG: '0.1.0'
>>>>>>> develop

  deploy:
    needs: init
    env:
      CLUSTERNAME: ${{ needs.init.outputs.CLUSTERNAME }}
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    runs-on: zk-self-hosted
    steps:

      - name: Checkout
        uses: actions/checkout@v3

<<<<<<< HEAD
=======
      - name: Configure git for private modules
        run: git config --global url."https://$TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Configure giot submodules
        run: git submodule update --init --recursive

>>>>>>> develop
      - name: Check output
        run: |
          echo "GIT_TAG=$GIT_TAG"
          echo "DOCKER_TAG=$VERSION"
          echo "GITHUB_SHA=$GITHUB_SHA"
<<<<<<< HEAD
          echo "DOCKER_REPO=$DOCKER_REPO"
=======
>>>>>>> develop
          echo "ENVIRONMENT=$ENVIRONMENT"
          echo "GKE_ZONE=$GKE_ZONE"

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'

<<<<<<< HEAD
      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ needs.init.outputs.CLUSTERNAME }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Deploy
        run: |-
          alias zkctl="go run main.go"
          export CLUSTER_NAME=$CLUSTERNAME
          export ZK_CLOUD_ADDRESS=$ZK_CLOUD_ADDRESS
          zkctl install --apikey $ZK_API_KEY
=======
#      - id: 'get-credentials'
#        uses: 'google-github-actions/get-gke-credentials@v1'
#        with:
#          cluster_name: '${{ needs.init.outputs.CLUSTERNAME }}'
#          location: '${{ env.GKE_ZONE }}'

      - name: Install
        if: ${{ env.ACTION == 'install' }}
        run: |-
          gcloud container clusters --zone us-west1-b get-credentials ${{ needs.init.outputs.CLUSTERNAME }}
          export CLUSTER_NAME=$CLUSTERNAME
          export ZK_CLOUD_ADDRESS=$ZK_CLOUD_ADDRESS
          export ZPIXIE_REPO=https://$TOKEN:x-oauth-basic@github.com/zerok-ai/zpixie.git
          go run main.go install -y --apikey $ZK_API_KEY --verbose

      - name: Dev Install
        if: ${{ env.ACTION == 'dev-install' }}
        run: |-
          gcloud container clusters --zone us-west1-b get-credentials ${{ needs.init.outputs.CLUSTERNAME }}
          export CLUSTER_NAME=$CLUSTERNAME
          export ZK_CLOUD_ADDRESS=$ZK_CLOUD_ADDRESS
          go run main.go install -y --apikey $ZK_API_KEY -d --zkVersion=$VERSIONS --verbose

      - name: Uninstall
        if: ${{ env.ACTION == 'uninstall' }}
        run: |-
          gcloud container clusters --zone us-west1-b get-credentials ${{ needs.init.outputs.CLUSTERNAME }}
          go run main.go delete -y --verbose
>>>>>>> develop
