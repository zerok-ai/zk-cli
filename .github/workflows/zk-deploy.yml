name: deploy
on:
  push:
    tags: #r/<ENVIRONMENT>/<DOCKER-TAG-OR-VERSION>
      - 'r/**'
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: '0.0.1-dev'
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'devclient03'
      VIZIER_TAG:
        description: 'Vizier Tag'
        required: true
        default: 'newcols0.0.1'
      ZK_CLOUD_ADDRESS:
        description: 'Url of ZK_CLOUD cluster'
        required: true
        default: 'devcloud01.getanton.com'
      ZK_API_KEY:
        description: 'API KEY - you can get it from px dashboard'
        required: true
        default: 'px-api-e0593597-de51-44cd-bc72-6cbdb881b2be'
      ACTION:
        type: choice
        required: true
        description: 'Choose action to perform'
        options:
          - install
          - uninstall
          - dev-install
#      ZK_SCENARIO_MANAGER_VERSION:
#        description: 'Scenario manager version'
#        default: '0.0.1-dev'
#      ZK_AXON_VERSION:
#        description: 'Axon version'
#        default: '0.0.1-dev'
#      ZK_DAEMONSET_VERSION:
#        description: 'Daemonset version'
#        default: '0.0.1-dev'
#      ZK_GPT_VERSION:
#        description: 'GPT version'
#        default: '0.0.1-dev'
#      ZK_WSP_CLIENT_VERSION:
#        description: 'Wsp client version'
#        default: '0.0.1-dev'
#      ZK_OPERATOR_VERSION:
#        description: 'Operator version'
#        default: '0.0.1-dev'
  workflow_call:
    inputs:
      VERSION:
        type: string
        default: 'latest'
      ENVIRONMENT:
        type: string
        default: 'poc'
    secrets:
      GKE_SA_KEY:
        required: true
env:
  DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}
  GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
  ZK_CLOUD_ADDRESS: ${{ github.event.inputs.ZK_CLOUD_ADDRESS }}
  VIZIER_TAG: ${{ github.event.inputs.VIZIER_TAG }}
  ZK_API_KEY: ${{ github.event.inputs.ZK_API_KEY }}
  ACTION: ${{ github.event.inputs.ACTION }}
  GOOS: ${{ vars.GOOS }}
  GOARCH: ${{ vars.GOARCH }}
  CGO_ENABLED: ${{ vars.CGO_ENABLED }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  NS: ${{ vars.NS }}
  DOCKER_REPO: ${{ vars.DOCKER_REPO }}
  APP_NAME: ${{ vars.APP_NAME }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  GOPRIVATE: ${{ vars.GOPRIVATE }}
  TOKEN: ${{ secrets.GITPAT }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  ZK_SCENARIO_MANAGER_VERSION: ${{ vars.ZK_SCENARIO_MANAGER_VERSION }}
  ZK_AXON_VERSION: ${{ vars.ZK_AXON_VERSION }}
  ZK_DAEMONSET_VERSION: ${{ vars.ZK_DAEMONSET_VERSION }}
  ZK_GPT_VERSION: ${{ vars.ZK_GPT_VERSION }}
  ZK_WSP_CLIENT_VERSION: ${{ vars.ZK_WSP_CLIENT_VERSION }}
  ZK_OPERATOR_VERSION: ${{ vars.ZK_OPERATOR_VERSION }}

jobs:
  init:
    uses: zerok-ai/zk-git-actions/.github/workflows/zk-dev-init.yml@main
    with:
      GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
      GIT_TAG: ${{ github.ref }}
      DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}

  deploy:
    needs: init
    env:
      CLUSTERNAME: ${{ needs.init.outputs.CLUSTERNAME }}
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    runs-on: zk-self-hosted
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure git for private modules
        run: git config --global url."https://$TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Configure giot submodules
        run: git submodule update --init --recursive

      - name: Check output
        run: |
          echo "GIT_TAG=$GIT_TAG"
          echo "DOCKER_TAG=$VERSION"
          echo "GITHUB_SHA=$GITHUB_SHA"
          echo "DOCKER_REPO=$DOCKER_REPO"
          echo "ENVIRONMENT=$ENVIRONMENT"
          echo "GKE_ZONE=$GKE_ZONE"

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ needs.init.outputs.CLUSTERNAME }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Install
        if: ${{ env.ACTION == 'install' }}
        run: |-
          export CLUSTER_NAME=$CLUSTERNAME
          export ZK_CLOUD_ADDRESS=$ZK_CLOUD_ADDRESS
          export VIZIER_TAG=$VIZIER_TAG
          export ZPIXIE_REPO=https://$TOKEN:x-oauth-basic@github.com/zerok-ai/zpixie.git
          go run main.go install -y --apikey $ZK_API_KEY

      - name: Dev Install
        if: ${{ env.ACTION == 'dev-install' }}
        run: |-
          export CLUSTER_NAME=$CLUSTERNAME
          export ZK_CLOUD_ADDRESS=$ZK_CLOUD_ADDRESS
          export ZK_SCENARIO_MANAGER_VERSION=$ZK_SCENARIO_MANAGER_VERSION
          export ZK_AXON_VERSION=$ZK_AXON_VERSION
          export ZK_DAEMONSET_VERSION=$ZK_DAEMONSET_VERSION
          export ZK_GPT_VERSION=$ZK_GPT_VERSION
          export ZK_WSP_CLIENT_VERSION=$ZK_WSP_CLIENT_VERSION
          export ZK_OPERATOR_VERSION=$ZK_OPERATOR_VERSION
          export VIZIER_TAG=$VIZIER_TAG
          export ZPIXIE_REPO=https://$TOKEN:x-oauth-basic@github.com/zerok-ai/zpixie.git
          go run main.go install -y --apikey $ZK_API_KEY -d --zkVersion=zk-scenario-manager=$ZK_SCENARIO_MANAGER_VERSION,zk-axon=$ZK_AXON_VERSION,zk-daemonset=$ZK_DAEMONSET_VERSION,zk-gpt=$ZK_GPT_VERSION,zk-wsp-client=$ZK_WSP_CLIENT_VERSION,zk-operator=$ZK_OPERATOR_VERSION

      - name: Uninstall
        if: ${{ env.ACTION == 'uninstall' }}
        run: |-
          go run main.go delete -y