name: helm-publish
on:
  workflow_call:
    inputs:
      HELM_VERSION:
        type: string
        required: true
      ENVIRONMENT:
        type: string
        default: 'poc'
    secrets:
      AWS_ACCESS_ID:
        required: true
      AWS_SECRET_KEY:
        required: true
env:
  HELM_VERSION: ${{ inputs.HELM_VERSION }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}

jobs:
  helm-publish:
    runs-on: zk-self-hosted
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: s3 sync repo
        run: aws s3 sync  ${{ vars.S3_BUCKET_NAME }}/zk-client/  .

      - name: helm package
        run: |-
          helm dependency update helm-charts
          helm package --version $HELM_VERSION helm-charts
      - name: helm index
        run: |-
          helm repo index ./ --url https://helm.zerok.ai/zk-client/
      - name: s3 sync
        run: |-
          aws s3 cp . ${{ vars.PUBLIC_HELM_S3_BUCKET }}/zk-client  --recursive --exclude "*" --include "index.yaml"  --include "*.tgz" --exclude "*/*"


      - name: s3 sync helm notes repo
        run: aws s3 sync ${{ vars.HELM_RELEASE_NOTES_S3_BUCKET }} .

      - name: create entry for this helm version
        run: |-
          rm -f zk-client-$HELM_VERSION.notes
          touch zk-client-$HELM_VERSION.notes
          printf "%-22s %s\n" "zk-client:" "$HELM_VERSION" >> zk-client-$HELM_VERSION.notes
          yaml_content=$(cat ./helm-charts/Chart.yaml)
          
          names=($(echo "$yaml_content" | grep -oP '(?<=name: ).*'))
          versions=($(echo "$yaml_content" | grep -oP '(?<=version: ).*'))
          
          for ((i=0; i<${#names[@]}; i++)); do
            if [[ ${names[i]} != "zk-client" ]]
            then
              printf "  %-20s %s\n" "${names[$i]}:" "${versions[$i]}" >> zk-client-$HELM_VERSION.notes
            fi
          done

      - name: s3 upload helm notes
        run: |-
          aws s3 cp . ${{ vars.HELM_RELEASE_NOTES_S3_BUCKET }}  --recursive --exclude "*" --include "index.yaml"  --include "*.notes" --exclude "*/*"

      - name: Clear CF Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.CF_DIST_ID }} --paths "/*"


     
